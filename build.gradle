buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://s01.oss.sonatype.org' }
		mavenLocal()
		google()
		gradlePluginPortal()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
	}
	dependencies {


		// This follows advice from https://blog.gradle.org/log4j-vulnerability
		constraints {
			classpath("org.apache.logging.log4j:log4j-core") {
				version {
					strictly("[2.17, 3[")
					prefer("2.17.0")
				}
				because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
			}
		}
	}
}

//allprojects {
//	apply plugin: 'eclipse'
//	apply plugin: 'idea'
//}

allprojects {
	apply plugin: "eclipse"

	version = '1.0'
	ext {
		appName = "gemo"
		gdxVersion = '1.10.0'
		roboVMVersion = '2.3.12'
		box2DLightsVersion = '1.5'
		ashleyVersion = '1.7.3'
		aiVersion = '1.8.2'
		gdxControllersVersion = '2.1.0'
	}

	repositories {
		mavenLocal()
		mavenCentral()
		google()
		gradlePluginPortal()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
		maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	}
}

/*project(":lwjgl3") {
	apply plugin: "java-library"


	dependencies {
		implementation project(":core")
		api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
		api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"

	}
}*/

project(":core") {
	apply plugin: "java-library"

	sourceSets.test.java.srcDirs = ["src/test/java/"]

	dependencies {
		api "com.badlogicgames.gdx:gdx:$gdxVersion"
		api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
		api 'junit:junit:4.13'
		implementation "junit:junit:4.+"
		implementation "org.mockito:mockito-all:1.9.+"

		implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

		testImplementation 'junit:junit:4.+'
		testImplementation "org.mockito:mockito-all:1.9.+"

		testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
		testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

	}

	test {
		useJUnit()
		maxHeapSize = '1G'
	}
}

//project(":tests") {
//	apply plugin: "java"
//
//	sourceSets.test.java.srcDirs = ["src/"]
//
//	dependencies {
//
//		/**
//		 * If you do have some classes to test in os specific code you may want to uncomment
//		 * some of these lines.
//		 *
//		 * BUT: I recommend to create seperate test sub projects for each platform. Trust me :)
//		 *
//		 */
//
////        compile project(":android")
////        compile project(":html")
////        compile project(":desktop")
//
//
////        if(System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
////        	compile project(":ios")
////        }
//
//		implementation project(":core")
//
//		implementation "junit:junit:4.+"
//		implementation "org.mockito:mockito-all:1.9.+"
//
//		implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
//		implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
//
//		testImplementation 'junit:junit:4.+'
//		testImplementation "org.mockito:mockito-all:1.9.+"
//
//		testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
//		testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
//		testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
//	}
//}

configure(subprojects) {
	apply plugin: 'java-library'
	sourceCompatibility = 1.8
	compileJava {
		options.incremental = true
	}
	dependencies {
		// This follows advice from https://blog.gradle.org/log4j-vulnerability
		constraints {
			implementation("org.apache.logging.log4j:log4j-core") {
				version {
					strictly("[2.17, 3[")
					prefer("2.17.0")
				}
				because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
			}
		}
	}

}

subprojects {
	version = '1.0.1'
	ext.appName = 'yorkpirates'
	repositories {
		mavenCentral()
		maven { url 'https://s01.oss.sonatype.org' }
		mavenLocal()
		gradlePluginPortal()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://jitpack.io' }
	}
}

eclipse.project.name = 'yorkpirates' + '-parent'
